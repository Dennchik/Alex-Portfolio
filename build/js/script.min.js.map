{"version":3,"names":[],"mappings":"","sources":["script.min.js"],"sourcesContent":["/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./\\u0000#src/js/script.js\":\n/*!****************************!*\\\n  !*** ./\u0000#src/js/script.js ***!\n  \\****************************/\n/***/ (function() {\n\neval(\"class ItcMoveEl {\\r\\n\\tconstructor() {\\r\\n\\t\\tthis._els = document.querySelectorAll('[data-move-el]');\\r\\n\\t\\tthis._data = [];\\r\\n\\t\\tthis._init();\\r\\n\\t}\\r\\n\\t_init() {\\r\\n\\t\\tthis._els.forEach((el, index) => {\\r\\n\\t\\t\\tthis._data[index] = {\\r\\n\\t\\t\\t\\tel,\\r\\n\\t\\t\\t\\tparent: el.parentElement,\\r\\n\\t\\t\\t\\tposition: [...el.parentElement.children].indexOf(el),\\r\\n\\t\\t\\t\\tmoves: JSON.parse(el.dataset.moveEl.replaceAll('\\\\'', '\\\"')),\\r\\n\\t\\t\\t\\tstate: -1\\r\\n\\t\\t\\t};\\r\\n\\t\\t});\\r\\n\\t\\tconst resizeObserver = new ResizeObserver((entries) => {\\r\\n\\t\\t\\tconst width = entries[0].contentRect.width;\\r\\n\\t\\t\\tthis._data.forEach((item) => {\\r\\n\\t\\t\\t\\tlet newState = item.state;\\r\\n\\t\\t\\t\\tlet minWidth = 0;\\r\\n\\t\\t\\t\\tlet maxWidth = 0;\\r\\n\\t\\t\\t\\tlet isChange = false;\\r\\n\\t\\t\\t\\titem.moves.forEach((breakpoint, index) => {\\r\\n\\t\\t\\t\\t\\tconst bpMin = breakpoint['bp-min'];\\r\\n\\t\\t\\t\\t\\tconst bpMax = breakpoint['bp-max'];\\r\\n\\t\\t\\t\\t\\tif (width >= bpMin && bpMax === undefined && bpMin >= minWidth) {\\r\\n\\t\\t\\t\\t\\t\\tnewState = index;\\r\\n\\t\\t\\t\\t\\t\\tminWidth = bpMin;\\r\\n\\t\\t\\t\\t\\t\\tisChange = true;\\r\\n\\t\\t\\t\\t\\t} else if (bpMin === undefined && width < bpMax && (bpMax <= maxWidth || maxWidth === 0)) {\\r\\n\\t\\t\\t\\t\\t\\tnewState = index;\\r\\n\\t\\t\\t\\t\\t\\tmaxWidth = bpMax;\\r\\n\\t\\t\\t\\t\\t\\tisChange = true;\\r\\n\\t\\t\\t\\t\\t} else if (width >= bpMin && width < bpMax) {\\r\\n\\t\\t\\t\\t\\t\\tnewState = index;\\r\\n\\t\\t\\t\\t\\t\\tminWidth = bpMin;\\r\\n\\t\\t\\t\\t\\t\\tmaxWidth = bpMax;\\r\\n\\t\\t\\t\\t\\t\\tisChange = true;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\tnewState = isChange ? newState : -1;\\r\\n\\t\\t\\t\\tif (item.state !== newState) {\\r\\n\\t\\t\\t\\t\\titem.state = newState;\\r\\n\\t\\t\\t\\t\\tthis._move(item);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t});\\r\\n\\t\\tresizeObserver.observe(document.body);\\r\\n\\t}\\r\\n\\t_move(item) {\\r\\n\\t\\tconst el = item['el'];\\r\\n\\t\\tconst state = item['state'];\\r\\n\\t\\tconst position = state > -1 ? item['moves'][state]['index'] : item['position'];\\r\\n\\t\\tconst target = state > -1 ? document.querySelector(item['moves'][state]['target']) : item['parent'];\\r\\n\\t\\tposition >= target.children.length ? target.append(el) : target.children[position].before(el);\\r\\n\\t}\\r\\n}\\r\\nnew ItcMoveEl();\\n\\n//# sourceURL=webpack://cheat-sheet/./%00#src/js/script.js?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = {};\n/******/ \t__webpack_modules__[\"./\\u0000#src/js/script.js\"]();\n/******/ \t\n/******/ })()\n;"],"file":"script.min.js"}